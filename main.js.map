{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about-modal/about-modal.component.css","webpack:///./src/app/about-modal/about-modal.component.html","webpack:///./src/app/about-modal/about-modal.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bytes.pipe.ts","webpack:///./src/app/editor/editor.component.css","webpack:///./src/app/editor/editor.component.html","webpack:///./src/app/editor/editor.component.ts","webpack:///./src/app/geometry.ts","webpack:///./src/app/graph-canvas/graph-canvas.component.css","webpack:///./src/app/graph-canvas/graph-canvas.component.html","webpack:///./src/app/graph-canvas/graph-canvas.component.ts","webpack:///./src/app/graph-canvas/graph-controller.service.ts","webpack:///./src/app/graph-canvas/svg-utils.ts","webpack:///./src/app/graph.ts","webpack:///./src/app/graphDocument.ts","webpack:///./src/app/graphlayout.ts","webpack:///./src/app/inline-edit/inline-edit.component.css","webpack:///./src/app/inline-edit/inline-edit.component.html","webpack:///./src/app/inline-edit/inline-edit.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/save-state-formatter.pipe.ts","webpack:///./src/app/store.service.ts","webpack:///./src/app/utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">About</h4>\\n  <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"activeModal.dismiss()\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div><b>Total Drive Quota:</b> {{info.quotaBytesTotal | bytes}}</div>\\n    <div><b>Drive Quota Used:</b> {{info.quotaBytesUsed | bytes}}</div>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"activeModal.close()\\\">Close</button>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-about-modal',\n  templateUrl: './about-modal.component.html',\n  styleUrls: ['./about-modal.component.css']\n})\nexport class AboutModalComponent implements OnInit {\n\n  info = {\n    quotaBytesTotal: 1000,\n    quotaBytesUsed: 400\n  };\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<app-navbar></app-navbar>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'graphit-ui';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { SaveStateFormatterPipe } from './save-state-formatter.pipe';\nimport { BytesPipe } from './bytes.pipe';\nimport { GraphCanvasComponent } from './graph-canvas/graph-canvas.component';\nimport { AboutModalComponent } from './about-modal/about-modal.component';\nimport { InlineEditComponent } from './inline-edit/inline-edit.component';\nimport { HttpModule } from '@angular/http';\n\nconst appRoutes: Routes = [\n  { path: 'edit',      component: EditorComponent },\n  { path: 'edit/:id?', component: EditorComponent },\n  { path: '',\n    redirectTo: '/edit/',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    EditorComponent,\n    SaveStateFormatterPipe,\n    BytesPipe,\n    GraphCanvasComponent,\n    AboutModalComponent,\n    InlineEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    NgbModule,\n    FontAwesomeModule,\n    FormsModule,\n    HttpModule\n  ],\n  entryComponents: [\n    AboutModalComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes'\n})\nexport class BytesPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    const bytes = parseInt(value);\n    if (isNaN(bytes)) {\n      return \"...\";\n    }\n    const units = [' bytes', ' KB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];\n    const p = bytes > 0 ? Math.floor(Math.log(bytes) / Math.LN2 / 10) : 0;\n    const u = Math.round(bytes / Math.pow(2, 10 * p));\n    return u + units[p];\n  }\n\n}\n","module.exports = \"\\n.doc-info {\\n    margin: 10px;\\n}\\n\\n.doc-title {\\n    font-size: 30px;\\n}\\n\\n.doc-state {\\n    font-size: 15px;\\n    color: gray;\\n}\"","module.exports = \"<main role=\\\"main\\\" class=\\\"container-fluid\\\">\\n\\n\\t<div class=\\\"doc-info\\\">\\n\\t\\t<app-inline-edit [(ngModel)]=\\\"doc && doc.info && doc.info.title\\\" (ngModelChange)=\\\"doc.change(true)\\\" class=\\\"doc-title\\\"></app-inline-edit>\\n\\t\\t<div class=\\\"doc-state\\\">{{ state() | saveStateFormatter }}</div>\\n\\t</div>\\n\\n\\t<div class=\\\"row\\\">\\n\\n\\t\\t<div class=\\\"col-md-9\\\">\\n\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"btn-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addNode()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdata-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Create a new node\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<fa-icon [icon]=\\\"faPlus\\\"></fa-icon>\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n            \\t\\t<app-graph-canvas (selection)=\\\"setSelection($event)\\\" [document]=\\\"doc\\\"></app-graph-canvas>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"col-md-3\\\">\\n\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t<h4 class=\\\"card-header\\\">Node Information</h4>\\n\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\tLabel: <app-inline-edit [(ngModel)]=\\\"graphSelection && graphSelection.label\\\" (ngModelChange)=\\\"doc.change(true)\\\"></app-inline-edit>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</main> <!-- /.container -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { GraphDocument, NodeSpec } from '../graphDocument';\nimport { StoreService } from '../store.service';\n\nexport enum EditorState {\n  CLEAN = 0, // NO CHANGES\n  DIRTY = 1, // UNSAVED CHANGES\n  SAVE = 2, // SAVE IN PROGRESS\n  LOAD = 3, // LOADING\n  READONLY = 4\n};\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n\n  public doc: GraphDocument = new GraphDocument();\n  public graphSelection: NodeSpec = null;\n\n  public faPlus = faPlus;\n\n  private loading: boolean = false;\n  private saving: boolean = false;\n\n  constructor(private storeService: StoreService) { }\n\n  ngOnInit() {\n  }\n\n  setSelection(node: NodeSpec) {\n    this.graphSelection = node;  \n  }\n\n  addNode() {\n    this.doc.addNode();\n  }\n\n  state(): EditorState {\n    if (this.loading) {\n      return EditorState.LOAD;\n    } else if (this.saving) {\n      return EditorState.SAVE;\n    } else if (this.doc.dirty) {\n      return EditorState.DIRTY;\n    } else if (this.doc.info != null && !this.doc.info.editable) {\n      return EditorState.READONLY;\n    }\n    return EditorState.CLEAN;\n  }\n\n  create() {\n    this.updateEditor({\n      editable: true,\n      title: 'Untitled document',\n      description: '',\n      mimeType: 'application/graphit',\n      resource_id: null\n    });\n  }\n\n  load(id: string, reload: boolean) {\n    /*\n    if (!reload && this.doc.info && id == this.doc.resource_id) {\n      return $q.when(this.doc.info);\n    }\n    this.loading = true;\n    return this.storeService.load(id).then(result => {\n      this.loading = false;\n      this.updateEditor(result.data);\n      $rootScope.$broadcast('loaded', doc.info);\n      return result;\n    }, result => {\n      this.loading = false;\n      $rootScope.$broadcast('error', {\n        action: 'load',\n        message: \"An error occured while loading the file\"\n      });\n      return result;\n    });\n    */\n  }\n\n  save(newRevision) {\n    /*\n    if (this.saving || this.loading) {\n      throw 'Save called from incorrect state';\n    }\n    this.saving = true;\n    this.doc.dirty = false;\n    const file = this.snapshot();\n\n    //newRevision = newRevision || doc.timeSinceLastSave() > ONE_HOUR_IN_MS;\n    const promise = this.storeService.save(file, newRevision);\n    promise.then(result => {\n        this.saving = false;\n        this.doc.resource_id = result.data;\n        this.doc.lastSave = new Date().getTime();\n        $rootScope.$broadcast('saved', this.doc.info);\n        return this.doc.info;\n      }, result => {\n        this.saving = false;\n        this.doc.dirty = true;\n        $rootScope.$broadcast('error', {\n          action: 'save',\n          message: \"An error occured while saving the file\"\n        });\n        return result;\n      });\n    return promise;\n    */\n  }\n\n  private updateEditor(fileInfo) {\n    /*\n    this.doc.lastSave = 0;\n    this.doc.info = fileInfo;\n    this.doc.resource_id = fileInfo.id;\n    if (fileInfo.content != null) {\n      this.doc.setGraph(angular.fromJson(fileInfo.content));\n    }\n    */\n  }\n\n}\n","\nexport class Point {\n\tconstructor(public x: number, public y: number) {}\n\n\tcornerTo (other: Point) {\n\t\treturn new Rectangle(\n\t\t\tMath.min(this.x, other.x),\n\t\t\tMath.min(this.y, other.y),\n\t\t\tMath.abs(this.x - other.x),\n\t\t\tMath.abs(this.y - other.y));\n\t}\n\n\trect(width: number, height: number) {\n\t\treturn new Rectangle(this.x, this.y, width, height);\n\t}\n}\n\nexport class Rectangle {\n\tconstructor(public x: number, public y: number, public width: number, public height: number) {}\n\n\tgetMaxX () {\n\t\treturn this.x + this.width;\n\t}\n\n\tgetMaxY () {\n\t\treturn this.y + this.height;\n\t}\n\n\tgetCenterX () {\n\t\treturn this.x + Math.floor(this.width / 2);\n\t}\n\n\tgetCenterY () {\n\t\treturn this.y + Math.floor(this.height / 2);\n\t}\n\n\tcontains (point: Point) {\n\t\treturn this.x <= point.x && point.x < (this.x + this.width)\n\t\t\t&& this.y <= point.y && point.y < (this.y + this.height);\n\t}\n\n\texpand (amount: number) {\n\t\treturn new Rectangle(this.x - amount, this.y - amount,\n\t\t\tthis.width + amount * 2, this.height + amount * 2);\n\t}\n\n}","module.exports = \"\\n.node rect {\\n\\tstroke-width: 1px;\\n\\tstroke: #ccc;\\n\\tfill: url(#rect-gradient);\\n\\t-webkit-filter: url(#drop-shadow);\\n\\t        filter: url(#drop-shadow);\\n}\\n\\n.node text {\\n\\ttext-anchor: middle;\\n}\\n\\n.node {\\n\\t-webkit-touch-callout: none;\\n\\t-webkit-user-select: none;\\n\\t-moz-user-select: none;\\n\\t-ms-user-select: none;\\n\\tuser-select: none;\\n}\\n\\n#node-CLOSED rect {\\n\\tstroke-width: 1px;\\n\\tfill: #f88;\\n}\\n\\n.node:hover {\\n\\tcursor: pointer;\\n\\topacity: 0.6;\\n}\\n\\n.node-selected rect {\\n\\tfill: url(#rect-select-gradient);\\n}\\n\\n.node-highlight rect {\\n\\tfill: url(#rect-highlight-gradient);\\n}\\n\\npath.edge {\\n\\tfill: none;\\n\\tstroke: #640a50;\\n\\tstroke-width: 3px;\\n\\tmarker-end: url(#arrowhead);\\n}\\n\\npath.edge.edge-selected {\\n\\tstroke: #6464cc;\\n}\\n\\n.edge:hover {\\n\\tcursor: pointer;\\n\\topacity: 0.4;\\n}\"","module.exports = \"<div>\\n    <svg id=\\\"graphCanvas\\\" width=\\\"100%\\\" height=\\\"100%\\\">\\n        <defs>\\n            <marker id=\\\"arrowhead\\\" viewBox=\\\"0 0 10 10\\\" refX=\\\"8\\\" refY=\\\"5\\\" markerUnits=\\\"strokeWidth\\\" markerWidth=\\\"8\\\"\\n                markerHeight=\\\"5\\\" orient=\\\"auto\\\" style=\\\"fill: #640a50\\\">\\n                <path d=\\\"M 0 0 L 10 5 L 0 10 z\\\" />\\n            </marker>\\n\\n            <filter id=\\\"drop-shadow\\\" width=\\\"150%\\\" height=\\\"150%\\\">\\n                <feGaussianBlur in=\\\"SourceAlpha\\\" result=\\\"blur-out\\\" stdDeviation=\\\"2\\\" />\\n                <feOffset in=\\\"blur-out\\\" result=\\\"the-shadow\\\" dx=\\\"2\\\" dy=\\\"2\\\" />\\n                <feBlend in=\\\"SourceGraphic\\\" in2=\\\"the-shadow\\\" mode=\\\"normal\\\" />\\n            </filter>\\n\\n            <linearGradient id=\\\"rect-gradient\\\" x1=\\\"0%\\\" y1=\\\"0%\\\" x2=\\\"0%\\\" y2=\\\"100%\\\">\\n                <stop offset=\\\"0%\\\" style=\\\"stop-color: rgb(254,254,255); stop-opacity:1\\\" />\\n                <stop offset=\\\"100%\\\" style=\\\"stop-color: rgb(247,247,255); stop-opacity:1\\\" />\\n            </linearGradient>\\n\\n            <linearGradient id=\\\"rect-select-gradient\\\" x1=\\\"0%\\\" y1=\\\"0%\\\" x2=\\\"0%\\\" y2=\\\"100%\\\">\\n                <stop offset=\\\"0%\\\" style=\\\"stop-color: #d9edf7; stop-opacity:1\\\" />\\n                <stop offset=\\\"100%\\\" style=\\\"stop-color: #c9ddf7; stop-opacity:1\\\" />\\n            </linearGradient>\\n\\n            <linearGradient id=\\\"rect-highlight-gradient\\\" x1=\\\"0%\\\" y1=\\\"0%\\\" x2=\\\"0%\\\" y2=\\\"100%\\\">\\n                <stop offset=\\\"0%\\\" style=\\\"stop-color: #77ee77; stop-opacity:1\\\" />\\n                <stop offset=\\\"100%\\\" style=\\\"stop-color: #67de67; stop-opacity:1\\\" />\\n            </linearGradient>\\n        </defs>\\n\\n        <g id=\\\"eventRect\\\">\\n            <rect width=\\\"100%\\\" height=\\\"100%\\\" style=\\\"fill: white\\\" />\\n            <g id=\\\"edges\\\" />\\n            <g id=\\\"nodes\\\" />\\n            <g id=\\\"tools\\\" />\\n            <g id=\\\"feedback\\\" />\\n        </g>\\n    </svg>\\n</div>\"","import { Component, OnInit, ViewEncapsulation, Output, Input } from '@angular/core';\nimport { Observable, Subject, PartialObserver } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Graph, Edge } from '../graph';\nimport { GraphLayout, SizeProvider, GraphNode, GraphEdge } from '../graphlayout';\nimport { Point, Rectangle } from '../geometry';\nimport { GraphControllerService, State, DrawContext, Tool, GhostNode, GhostLine } from './graph-controller.service';\nimport { GraphDocument, GraphSpec, NodeSpec } from '../graphDocument';\nimport { toPoint, edgeLine } from './svg-utils';\n\n//import * as Snap from 'snapsvg';\n\n/// <reference path=\"../../../node_modules/@types/snapsvg/index.d.ts\" />\ndeclare var Snap: any;\n\nclass SvgNode implements GraphNode {\n  svgElement: any;\n  bounds: Rectangle;\n\n  constructor(public nodeSpec: NodeSpec) { }\n\n  getWeight() {\n    return this.nodeSpec.id;\n  }\n}\n\nclass SvgEdge extends Edge<SvgNode> {\n  svgElement: any;\n  constructor(fromNode: SvgNode, toNode: SvgNode) {\n    super(fromNode, toNode);\n  }\n}\n\nenum GraphProperties {\n  minLabelWidth = 50,\n  nodePadding = 10,\n  verticalMargin = 50,\n  horizontalMargin = 50\n}\n\nclass NodeSizeProvider implements SizeProvider<SvgNode> {\n  getWidth(node: SvgNode) {\n    return node.bounds.width;\n  }\n  getHeight(node: SvgNode) {\n    return node.bounds.height;\n  }\n  getVerticalMargin() {\n    return GraphProperties.verticalMargin;\n  }\n  getHorizontalMargin() {\n    return GraphProperties.horizontalMargin;\n  }\n}\n\nclass SvgDrawContext implements DrawContext {\n\n  private nodes: Array<GraphNode>;\n  private edges: Array<GraphEdge>;\n  private sizeProvider = new NodeSizeProvider();\n\n  constructor(\n    private svg: any,\n    public selectionObserver: PartialObserver<GraphNode>,\n    private document: GraphDocument) {\n      \n      this.document.onChange.subscribe(data => {\n          this.render(data);\n      });\n\n      this.render(this.document.graph);\n    }\n\n  findNode(point: Point) {\n    return this.nodes.find(node => node.bounds.contains(point));\n  }\n\n  resolveNode(node: GraphNode) {\n    const oldNode = <SvgNode>node;\n    return this.nodes.find(node => (<SvgNode>node).nodeSpec.id == oldNode.nodeSpec.id);\n  }\n\n  findEdge(point: Point) {\n    return this.edges.find(node => node.contains(point));\n  }\n\n  removeTools() {\n    this.svg.selectAll(\"g#tools g\").remove();\n  }\n\n  displayTool(tool: Tool) {\n    const rect = this.svg.rect(tool.origin.x, tool.origin.y, 20, 20, 3, 3)\n      .attr({\n        rx: \"3\",\n        ry: \"3\",\n        stroke: \"#999\",\n        \"stroke-width\":\"2px\",\n        fill: \"white\"\n      });\n    const image = this.svg.image(tool.imgURL, tool.origin.x + 2, tool.origin.y + 2, 16, 16);\n    const group = this.svg.g(rect, image).attr({ class: \"tool\" });\n    this.svg.select(\"g#tools\").append(group);\n  }\n\n  nodesClass(name: string, func: (node: GraphNode) => boolean) {\n    this.nodes.forEach(node => {\n      (<SvgNode>node).svgElement.toggleClass(name, func(node));\n    });\n  }\n\n  edgesClass(name: string, func: (edge: GraphEdge) => boolean) {\n    this.edges.forEach(edge => {\n      (<SvgEdge>edge.getOriginalEdge<SvgNode>()).svgElement.toggleClass(name, func(edge));\n    });\n  }\n\n  displayGhostNode(node: GraphNode): GhostNode {\n    const ghost = this.svg.rect()\n      .attr({\n        rx: \"5\",\n        ry: \"5\",\n        x: node.bounds.x,\n        y: node.bounds.y,\n        width: node.bounds.width,\n        height: node.bounds.height,\n        stroke: \"#CCC\",\n        \"stroke-width\": \"2px\",\n        \"fill-opacity\": \"0.5\"\n      });\n    this.svg.select(\"g#feedback\").append(ghost);\n    return new SvgGhostNode(ghost);\n  }\n\n  displayGhostLine(from: Point, to: Point): GhostLine {\n    const pendingLine = this.svg.line(from.x, from.y, to.x, to.y)\n     .attr({\n       stroke: \"blue\",\n       \"stroke-width\": \"2px\"\n      });\n    this.svg.select(\"g#feedback\").append(pendingLine);\n    return new SvgGhostLine(pendingLine);\n  }\n\n  connect(from: GraphNode, to: GraphNode) {\n    this.document.connectNodes((<SvgNode>from).nodeSpec, (<SvgNode>to).nodeSpec);\n  }\n\n  swap(node: GraphNode, other: GraphNode) {\n    console.log(\"Swap: \", node, other);\n  }\n\n  removeNode(node: GraphNode) {\n    this.document.removeNode((<SvgNode>node).nodeSpec);\n  }\n\n  removeEdge(edge: GraphEdge) {\n    const originalEdge = edge.getOriginalEdge<SvgNode>();\n    this.document.removeEdge({\n      from: originalEdge.getFromNode().nodeSpec.id,\n      to: originalEdge.getToNode().nodeSpec.id\n    });\n  }\n\n  private render(graph: GraphSpec) {\n    const svgNodes = this.svg.select(\"g#nodes\");\n    const svgEdges = this.svg.select(\"g#edges\");\n  \n    // clear svg\n    svgNodes.selectAll(\"g\").remove();\n    svgEdges.selectAll(\"path\").remove();\n\n    const g = this.buildGraph(graph);\n\n    // build svg nodes\n    g.getNodes()\n      .forEach(node => {\n        const rect = this.svg.rect(0, 0, 0, 0, 5, 5);\n\n        const label = this.svg.text(0, 0, node.nodeSpec.label)\n          .attr({ dy: 25 });\n\n        const nodeGroup = this.svg.group(rect, label)\n          .attr({\n            class: \"node\",\n            id: \"node-\" + node.nodeSpec.id\n          });\n\n        // compute node size\n        const bbox = label.getBBox();\n        bbox.width = Math.max(bbox.width, GraphProperties.minLabelWidth);\n        node.bounds = new Rectangle(0, 0,\n          bbox.width + 2 * GraphProperties.nodePadding,\n          bbox.height + 2 * GraphProperties.nodePadding);\n        rect.attr({\n          width: node.bounds.width,\n          height: node.bounds.height\n        });\n        label.attr({\n          x: node.bounds.width / 2\n        });\n        node.svgElement = nodeGroup;\n        svgNodes.append(nodeGroup);\n      });\n\n    // layout graph\n    const graphLayout = new GraphLayout(g);\n    graphLayout.layout();\n    graphLayout.setSizes(this.sizeProvider);\n\n    // place nodes\n    g.getNodes().forEach(node => {\n      node.svgElement.attr({ transform: \"translate(\" + node.bounds.x + \",\" + node.bounds.y + \")\" });\n      node.svgElement.select(\"rect\").attr({\n        width: node.bounds.width,\n        height: node.bounds.height\n      });\n      node.svgElement.select(\"text\").attr({\n        x: node.bounds.width / 2\n      });\n    });\n\n    // draw edges\n    graphLayout.getEdges().forEach(edge => {\n      const svgElement = this.svg.path(edgeLine(edge.getPoints(), 15))\n        .attr({ class: \"edge\" });\n      (<SvgEdge>edge.getOriginalEdge<SvgNode>()).svgElement = svgElement;\n      svgEdges.append(svgElement);\n    });\n\n    this.svg.attr({ \"height\": graphLayout.getHeight() });\n\n    this.nodes = g.getNodes();\n    this.edges = graphLayout.getEdges();\n  }\n\n  private buildGraph(graph: GraphSpec) {\n    const g = new Graph<SvgNode, Edge<SvgNode>>();\n    const nodeMap = {};\n    graph.nodes.forEach(nodeSpec => {\n      const node = new SvgNode(nodeSpec);\n      nodeMap[nodeSpec.id] = node;\n      g.addNode(node);\n    });\n    graph.edges.forEach(edge => {\n      g.addEdge(new Edge(nodeMap[edge.from], nodeMap[edge.to]));\n    });\n    return g;\n  }\n\n}\n\nclass SvgGhostNode implements GhostNode {\n  constructor(private svgElement: any) { }\n\n  moveTo(position: Point) {\n    this.svgElement.attr({\n      x: position.x,\n      y: position.y\n    });\n  }\n  \n  remove() {\n    this.svgElement.remove();\n  }\n}\n\nclass SvgGhostLine implements GhostLine {\n  constructor(private svgElement: any) {}\n\n  moveEnd(position: Point) {\n    this.svgElement.attr({\n      x2: position.x,\n      y2: position.y\n    });\n  }\n\n  remove() {\n    this.svgElement.remove();\n  }\n}\n\n\n@Component({\n  selector: 'app-graph-canvas',\n  templateUrl: './graph-canvas.component.html',\n  styleUrls: ['./graph-canvas.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GraphCanvasComponent implements OnInit {\n\n  private svg: any; // Snap.Paper;\n  private state: State;\n  private selectionSubject = new Subject<GraphNode>();\n\n  @Input() document: GraphDocument;\n  @Output() selection: Observable<any>;\n\n  constructor(private graphController: GraphControllerService) {\n    this.selection = this.selectionSubject.pipe(map(node => {\n      if (node) {\n        return (<SvgNode>node).nodeSpec;\n      }\n      return null;\n    }));\n  }\n\n  ngOnInit() {\n    this.svg = Snap(\"#graphCanvas\");\n\n    this.svg.select(\"#eventRect\")\n      .mousedown(this.mouseDown.bind(this))\n      .mouseup(this.mouseUp.bind(this))\n      .mousemove(this.mouseMove.bind(this));\n    \n    // TODO render on window resize\n\n    this.state = this.graphController.create(new SvgDrawContext(\n      this.svg,\n      this.selectionSubject,\n      this.document));\n  }\n\n  mouseDown(event: any, x: number, y: number) {\n    this.state = this.state.mouseDown(toPoint(event));\n  }\n\n  mouseUp(event: any, x: number, y: number) {\n    this.state = this.state.mouseUp(toPoint(event));\n  }\n\n  mouseMove(event: any, x: number, y: number) {\n    this.state = this.state.mouseMove(toPoint(event));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PartialObserver } from 'rxjs';\nimport { Point } from '../geometry';\nimport { GraphNode, GraphEdge } from '../graphlayout';\n\nexport interface GhostNode {\n  moveTo(position: Point): void;\n  remove(): void;\n}\n\nexport interface GhostLine {\n  moveEnd(to: Point): void;\n  remove(): void;\n}\n\nexport interface DrawContext {\n  findNode(point: Point): GraphNode;\n  findEdge(point: Point): GraphEdge;\n  resolveNode(node: GraphNode): GraphNode;\n\n  selectionObserver: PartialObserver<GraphNode>;\n  removeTools(): void;\n  displayTool(tool: Tool): void;\n  nodesClass(name: string, func: (node: GraphNode) => boolean): void;\n  edgesClass(name: string, func: (edge: GraphEdge) => boolean): void;\n  displayGhostNode(node: GraphNode): GhostNode;\n  displayGhostLine(from: Point, to: Point): GhostLine;\n\n  connect(from: GraphNode, to: GraphNode): void;\n  swap(node: GraphNode, other: GraphNode): void;\n  removeNode(node: GraphNode): void;\n  removeEdge(edge: GraphEdge): void;\n}\n\nexport interface State {\n  mouseDown(point: Point): State;\n  mouseUp(point: Point): State;\n  mouseMove(point: Point): State;\n}\n\nexport interface Tool {\n  imgURL: string;\n  state: (location: Point) => State;\n\n  origin?: Point;\n}\n\nclass Context {\n  public tools: Array<Tool> = [];\n  public nodeSelection: GraphNode;\n  public edgeSelection: GraphEdge;\n\n  constructor(public drawContext: DrawContext) { }\n\n  clearSelection() {\n    this.eraseTools();\n    this.tools = [];\n    this.nodeSelection = null;\n    this.edgeSelection = null;\n    this.drawContext.nodesClass(\"node-selected\", d => false);\n    this.drawContext.edgesClass(\"edge-selected\", d => false);\n    this.drawContext.selectionObserver.next(null);\n  }\n\n  selectNode(node: GraphNode) {\n    this.edgeSelection = null;\n    this.nodeSelection = this.drawContext.resolveNode(node);\n    this.drawContext.nodesClass(\"node-selected\", d => d == this.nodeSelection);\n    this.drawContext.edgesClass(\"edge-selected\", d => false);\n    this.drawContext.selectionObserver.next(this.nodeSelection);\n\n    this.tools = [\n      { imgURL: \"assets/connect.png\", state: (point: Point) => new ConnectNodesState(this, point) },\n      { imgURL: \"assets/remove.png\", state: (point: Point) => new RemoveNodeState(this) }\n    ];\n    this.placeTools(this.nodeSelection.bounds.getMaxX() + 10, this.nodeSelection.bounds.y, this.tools);\n  }\n\n  selectEdge(edge: GraphEdge) {\n    this.nodeSelection = null;\n    this.edgeSelection = edge;\n    this.drawContext.edgesClass(\"edge-selected\", d => d == edge);\n    this.drawContext.nodesClass(\"node-selected\", d => false);\n    this.tools = [\n      { imgURL: \"assets/remove.png\", state: (point: Point) => new RemoveEdgeState(this) }\n    ];\n    const fromPoint = edge.getPoints()[0];\n    this.placeTools(fromPoint.x + 10, fromPoint.y + 10, this.tools);\n  }\n\n  eraseTools() {\n    this.drawContext.removeTools();\n  }\n\n  findTool(point: Point) {\n    return this.tools.find(tool => tool.origin.rect(20, 20).contains(point));\n  }\n\n  private placeTools(x: number, y: number, tools: Array<Tool>) {\n    this.tools.forEach(tool => {\n      tool.origin = new Point(x, y);\n      y += 25;\n    });\n    this.eraseTools();\n\n    // create tools visual\n    this.tools.forEach(tool => {\n      this.drawContext.displayTool(tool);\n    });\n  }\n\n  findSwapCandidates(node: GraphNode) {\n    const candidateNodes = [];\n    //const edges = this.svgContext.graphLayout.workGraph.getIncomings(node);\n    //if (edges.length == 0) {\n    //  this.svgContext.graphLayout.ranks[0].nodes.forEach(n => {\n    //    if (n != node) {\n    //      candidateNodes.push(n);\n    //    }\n    //  });\n    //}\n    return candidateNodes;\n  }\n}\n\nclass IdleState implements State {\n  constructor(private context: Context) { }\n  mouseDown(point: Point) {\n    const selectedTool = this.context.findTool(point);\n    if (selectedTool != null) {\n      this.context.eraseTools();\n      return selectedTool.state(point);\n    }\n\n    const selectedNode = this.context.drawContext.findNode(point);\n    if (selectedNode != null) {\n      return new NodeDragStartState(this.context, selectedNode);\n    }\n\n    const selectedEdge = this.context.drawContext.findEdge(point);\n    if (selectedEdge != null) {\n      return new EdgeDragStartState(this.context, selectedEdge);\n    }\n    this.context.clearSelection();\n    return this;\n  };\n\n  mouseMove(point: Point) {\n    return this;\n  }\n\n  mouseUp(point: Point) {\n    return this;\n  }\n}\n\nclass NodeDragStartState {\n  constructor(private context: Context, private node: GraphNode) { }\n\n  mouseDown(point: Point) {\n    return this;\n  }\n\n  mouseMove(point: Point) {\n    return new NodeDragState(this.context, this.node, point);\n  }\n\n  mouseUp(point: Point) {\n    this.context.selectNode(this.node);\n    return new IdleState(this.context);\n  }\n}\n\nclass NodeDragState implements State {\n\n  private candidateNodes: Array<GraphNode>;\n  private candidate: GraphNode;\n  private offset: any;\n  private ghost: GhostNode;\n\n  constructor(private context: Context, private node: GraphNode, point: Point) {\n    this.node = node;\n    this.context.clearSelection();\n    this.candidateNodes = this.context.findSwapCandidates(node);\n    this.ghost = this.context.drawContext.displayGhostNode(node);\n    this.offset = { dx: point.x - node.bounds.x, dy: point.y - node.bounds.y };\n    this.context.drawContext.nodesClass(\"node-highlight\", d => d == node || this.candidateNodes.indexOf(d) >= 0);\n  }\n  mouseDown(point: Point) {\n    return this;\n  }\n\n  mouseMove(point: Point) {\n    this.ghost.moveTo(new Point(point.x - this.offset.dx, point.y - this.offset.dy));\n    this.candidate = this.candidateNodes.find(d => d.bounds.contains(point));\n    this.context.drawContext.nodesClass(\"node-highlight\", d =>\n      d == this.node || this.candidateNodes.indexOf(d) >= 0 && d != this.candidate);\n    this.context.drawContext.nodesClass(\"node-selected\", d => d == this.candidate);\n    return this;\n  };\n\n  mouseUp(point: Point) {\n    this.ghost.remove();\n    this.context.drawContext.nodesClass(\"node-highlight\", d => false);\n    if (this.candidate != null) {\n      this.context.drawContext.swap(this.node, this.candidate);\n    }\n    this.context.selectNode(this.node);\n    return new IdleState(this.context);\n  }\n}\n\nclass EdgeDragStartState implements State {\n  constructor(private context: Context, private edge: GraphEdge) { }\n\n  mouseDown(point: Point) {\n    return this;\n  }\n\n  mouseMove(point: Point) {\n    return this;\n  }\n\n  mouseUp(point: Point) {\n    this.context.selectEdge(this.edge);\n    return new IdleState(this.context);\n  }\n}\n\nclass ConnectNodesState implements State {\n  private pendingLine: GhostLine;\n  private destinationNode: GraphNode;\n\n  constructor(private context: Context, point: Point) {\n    this.pendingLine = this.context.drawContext.displayGhostLine(\n      new Point(\n        this.context.nodeSelection.bounds.x + this.context.nodeSelection.bounds.width / 2,\n        this.context.nodeSelection.bounds.y + this.context.nodeSelection.bounds.height / 2),\n      point\n    );\n  }\n\n  mouseDown(point: Point) {\n    return this;\n  }\n\n  mouseMove(point: Point) {\n    this.pendingLine.moveEnd(point);\n    this.destinationNode = this.context.drawContext.findNode(point);\n    this.context.drawContext.nodesClass(\"node-highlight\", d => d == this.destinationNode);\n    return this;\n  };\n\n  mouseUp(point: Point) {\n    this.pendingLine.remove();\n    this.context.drawContext.nodesClass(\"node-highlight\", d => false);\n    if (this.destinationNode != null && this.destinationNode != this.context.nodeSelection) {\n      this.context.drawContext.connect(this.context.nodeSelection, this.destinationNode);\n    }\n    this.context.selectNode(this.context.nodeSelection);\n    return new IdleState(this.context);\n  }\n}\n\nclass RemoveNodeState implements State {\n  constructor(private context: Context) { }\n\n  mouseDown(point: Point) {\n    return this;\n  };\n\n  mouseMove(point: Point) {\n    return this;\n  };\n\n  mouseUp(point: Point) {\n    this.context.drawContext.removeNode(this.context.nodeSelection);\n    this.context.clearSelection();\n    return new IdleState(this.context);\n  }\n}\n\nclass RemoveEdgeState implements State {\n  constructor(private context: Context) { }\n\n  mouseDown(point: Point) {\n    return this;\n  }\n\n  mouseMove(point: Point) {\n    return this;\n  }\n\n  mouseUp(point: Point) {\n    this.context.drawContext.removeEdge(this.context.edgeSelection);\n    this.context.clearSelection();\n    return new IdleState(this.context);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GraphControllerService {\n\n  constructor() { }\n\n  create(drawContext: DrawContext): State {\n    return new IdleState(new Context(drawContext));\n  }\n}\n","import { Point } from '../geometry';\n\nexport function toPoint(event: any) {\n    const pt = event.target.ownerSVGElement.createSVGPoint();\n    pt.x = event.clientX\n    pt.y = event.clientY;\n    const transformed = pt.matrixTransform(event.target.ownerSVGElement.getScreenCTM().inverse());\n    return new Point(transformed.x, transformed.y);\n}\n\nfunction midPoint(p1: Point, p2: Point, t: number) {\n    return new Point(p2.x + Math.sign(p1.x - p2.x) * t, p2.y + Math.sign(p1.y - p2.y) * t);\n}\n\nexport function edgeLine(points: Array<Point>, radius: number) {\n    function pointCoords(point: Point): string {\n        return point.x + \",\" + point.y;\n    }\n    let path = \"M\";\n    path += pointCoords(points[0]);\n    for (let i = 1; i < points.length - 1; i++) {\n        path += \"L\";\n        path += pointCoords(midPoint(points[i - 1], points[i], radius));\n        path += \"Q\";\n        path += pointCoords(points[i]);\n        path += \" \";\n        path += pointCoords(midPoint(points[i + 1], points[i], radius));\n    }\n    path += \"L\";\n    // offset the end point because of arrowhead\n    path += pointCoords(midPoint(points[points.length - 2], points[points.length - 1], 2));\n    return path;\n}","\nimport { GMap, remove } from './utils';\n\nexport class Graph<T, E extends Edge<T>> {\n\n\tprivate nodes: GMap<T, NodeWrapper<E>>;\n\tprivate edges: Array<E>;\n\n\tconstructor(graph?: Graph<T, E>) {\n\t\tthis.nodes = new GMap();\n\t\tthis.edges = [];\n\n\t\tif (graph != null) {\n\t\t\tgraph.getNodes().forEach(node => {\n\t\t\t\tthis.addNode(node);\n\t\t\t});\n\t\t\tgraph.getEdges().forEach(edge => {\n\t\t\t\tthis.addEdge(edge);\n\t\t\t});\n\t\t}\n\t}\n\n\taddNode(node: T) {\n\t\tthis.nodes.put(node, new NodeWrapper());\n\t}\n\n\taddEdge(edge: E) {\n\t\tthis.edges.push(edge);\n\t\tthis.nodes.get(edge.getFromNode()).edges.push(edge);\n\t\tthis.nodes.get(edge.getToNode()).edges.push(edge);\n\t\tthis.nodes.get(edge.getFromNode()).outgoings.push(edge);\n\t\tthis.nodes.get(edge.getToNode()).incomings.push(edge);\n\t}\n\n\tremoveNode(node: T) {\n\t\tconst wrapper = this.nodes.remove(node);\n\t\twrapper.incomings.forEach(edge => {\n\t\t\tremove(this.edges, edge);\n\t\t\tremove(this.getOutgoings(edge.getFromNode()), edge);\n\t\t\tremove(this.getEdges(edge.getFromNode()), edge);\n\t\t});\n\t\twrapper.outgoings.forEach(edge => {\n\t\t\tremove(this.edges, edge);\n\t\t\tremove(this.getIncomings(edge.getToNode()), edge);\n\t\t\tremove(this.getEdges(edge.getToNode()), edge);\n\t\t});\n\t};\n\n\tgetNodes(): Array<T> {\n\t\treturn this.nodes.keys();\n\t}\n\n\tgetEdges(node?: T): Array<E> {\n\t\tif (node != null) {\n\t\t\treturn this.nodes.get(node).edges;\n\t\t}\n\t\treturn this.edges;\n\t}\n\n\tgetIncomings(node: T) {\n\t\treturn this.nodes.get(node).incomings;\n\t}\n\n\tgetOutgoings(node: T) {\n\t\treturn this.nodes.get(node).outgoings;\n\t}\n\n\tgetSink(): T {\n\t\treturn this.getNodes().find(node => this.nodes.get(node).outgoings.length == 0);\n\t}\n\n\tgetSource(): T {\n\t\treturn this.getNodes().find(node => this.nodes.get(node).incomings.length == 0);\n\t};\n\n\tgetIsolated(): T {\n\t\treturn this.getNodes().find(node =>\n\t\t\tthis.nodes.get(node).incomings.length == 0\n\t\t\t\t&& this.nodes.get(node).outgoings.length == 0);\n\t}\n\n\treplaceEdgeBy(edge: E, fromEdge: E, toEdge: E) {\n\t\tremove(this.edges, edge);\n\t\tthis.replaceOutgoingEdge(edge, fromEdge);\n\t\tthis.replaceIncomingEdge(edge, toEdge);\n\t}\n\n\treplaceOutgoingEdge(edge: E, newEdge: E) {\n\t\tthis.edges.push(newEdge);\n\t\tthis.getIncomings(newEdge.getToNode()).push(newEdge);\n\t\tthis.replaceEdge(this.getOutgoings(edge.getFromNode()), edge, newEdge);\n\t\tthis.replaceEdge(this.getEdges(edge.getFromNode()), edge, newEdge);\n\t}\n\n\treplaceIncomingEdge(edge: E, newEdge: E) {\n\t\tthis.edges.push(newEdge);\n\t\tthis.getOutgoings(newEdge.getFromNode()).push(newEdge);\n\t\tthis.replaceEdge(this.getIncomings(edge.getToNode()), edge, newEdge);\n\t\tthis.replaceEdge(this.getEdges(edge.getToNode()), edge, newEdge);\n\t}\n\n\tprivate replaceEdge(edges: Array<Edge<T>>, oldEdge: Edge<T>, newEdge: Edge<T>) {\n\t\tfor (let i = 0; i < edges.length; ++i) {\n\t\t\tif (edges[i] == oldEdge) {\n\t\t\t\tedges[i] = newEdge;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthrow new Error(\"edge not found\");\n\t}\n\n}\n\nclass NodeWrapper<E> {\n\tpublic edges: Array<E> = [];\n\tpublic incomings: Array<E> = [];\n\tpublic outgoings: Array<E> = [];\n}\n\nexport class Edge<T> {\n\tconstructor(private fromNode: T, private toNode: T) {}\n\n\tgetFromNode(): T {\n\t\treturn this.fromNode;\n\t}\n\n\tgetToNode(): T {\n\t\treturn this.toNode;\n\t}\n\n\tgetOpposite(node: T): T {\n\t\tif (node == this.fromNode) {\n\t\t\treturn this.toNode;\n\t\t}\n\t\treturn this.fromNode;\n\t}\n}","import { Subject } from \"rxjs\";\n\nexport interface NodeSpec {\n    id: number;\n    label: string;\n    weight?: number;\n}\n\nexport interface EdgeSpec {\n    from: number;\n    to: number;\n}\n\nexport interface GraphSpec {\n    nodes: NodeSpec[];\n    edges: EdgeSpec[];\n}\n\nexport class GraphDocument {\n\n    public dirty: boolean = false;\n    private lastSave = 0;\n    private resource_id = null;\n\n    onChange = new Subject<GraphSpec>();\n    info = {\n        title: \"Mon Doc\",\n        editable: true,\n        resource_id: null\n    };\n    graph: GraphSpec = {\n        nodes: [\n            { id: 1, label: \"Accepted\" },\n            { id: 2, label: \"Removed\" },\n            { id: 3, label: \"Transfered\" },\n            { id: 4, label: \"Canceled\" },\n            { id: 5, label: \"Changed\" },\n            { id: 6, label: \"Abandonned\" }\n        ],\n        edges: [\n            { from: 1, to: 3 },\n            { from: 1, to: 2 },\n            { from: 2, to: 3 },\n            { from: 3, to: 5 },\n            { from: 5, to: 6 },\n            { from: 3, to: 6 },\n            { from: 3, to: 6 },\n            { from: 4, to: 2 }\n        ]\n    };\n\n    constructor() { }\n\n    timeSinceLastSave() {\n        return new Date().getTime() - this.lastSave;\n    }\n\n    public snapshot() {\n        this.dirty = false;\n        const data: any = Object.assign({}, this.info);\n        data.resource_id = this.resource_id;\n        if (this.info.editable) {\n            data.content = JSON.stringify(this.graph);\n        }\n        return data;\n    }\n\n    /*\n    doc.$watch('info',\n        function (newValue, oldValue) {\n            if (oldValue != null && newValue === oldValue) {\n            \tdoc.dirty = true;\n            }\n        },\n        true);\n    */\n\n    change(isDirty: boolean) {\n        this.dirty = isDirty;\n        this.onChange.next(this.graph);\n    };\n\n    setGraph(graph: GraphSpec) {\n        this.graph = graph;\n        this.change(false);\n    }\n\n    addNode() {\n        let newId = 0;\n        if (this.graph.nodes.length > 0) {\n            newId = Math.max(...this.graph.nodes.map(node => node.id)) + 1;\n        }\n        this.graph.nodes.push({ id: newId, label: \"Unnamed\", weight: newId });\n        this.change(true);\n    }\n\n    connectNodes(from: NodeSpec, to: NodeSpec) {\n        this.graph.edges.push({ from: from.id, to: to.id });\n        this.change(true);\n    }\n\n    removeNode(removedNode: NodeSpec) {\n        this.graph.edges = this.graph.edges.filter(edge => edge.from != removedNode.id && edge.to != removedNode.id);\n        this.graph.nodes = this.graph.nodes.filter(node => node.id != removedNode.id);\n        this.change(true);\n    }\n\n    removeEdge(removedEdge: EdgeSpec) {\n        this.graph.edges = this.graph.edges.filter(edge => edge.from != removedEdge.from || edge.to != removedEdge.to);\n        this.change(true);\n    }\n\n}","\nimport { Point, Rectangle } from './geometry';\nimport { Graph, Edge } from './graph';\nimport { GMap } from './utils';\n\nenum Side {\n\tTOP = 0,\n\tBOTTOM = 1,\n\tLEFT = 2,\n\tRIGHT = 3\n}\n\nexport interface SizeProvider<T> {\n\tgetWidth(node: T): number;\n\tgetHeight(node: T): number;\n\tgetVerticalMargin(): number;\n\tgetHorizontalMargin(): number;\n}\n\nexport interface GraphNode {\n\tgetWeight(): number;\n\tbounds: Rectangle;\n}\n\nexport interface GraphEdge {\n\tgetPoints(): Array<Point>;\n\tcontains(point: Point): boolean;\n\tgetOriginalEdge<T>(): Edge<T>;\n}\n\nclass EdgePositionAdjuster<T extends GraphNode> {\n\n\tprivate outgoings: Array<EdgePart<T>>;\n\tprivate incomings: Array<EdgePart<T>>;\n\tprivate straightEdge: EdgePart<T>;\n\n\tconstructor(private side: Side, private node: GraphicalNode<T>) { }\n\n\treset() {\n\t\tthis.outgoings = [];\n\t\tthis.incomings = [];\n\t\tthis.straightEdge = null;\n\t}\n\n\tadd(edge: EdgePart<T>) {\n\t\tif (edge.getFromNode() == this.node) {\n\t\t\tthis.outgoings.push(edge);\n\t\t} else {\n\t\t\tthis.incomings.push(edge);\n\t\t}\n\t\tif (edge.getFromLine() == edge.getToLine()) {\n\t\t\tthis.straightEdge = edge;\n\t\t}\n\t};\n\n\tadjust(edge: EdgePart<T>): Point {\n\t\tvar point = this.node.getPoint(this.side);\n\n\t\tif (this.incomings.length <= 1 && this.outgoings.length <= 1\n\t\t\t|| this.straightEdge == edge) {\n\t\t\treturn point;\n\t\t}\n\t\tthis.incomings.sort((o1, o2) => {\n\t\t\tvar o1Opposite = o1.getOpposite(this.node);\n\t\t\tvar o2Opposite = o2.getOpposite(this.node);\n\t\t\tif (this.side == Side.LEFT) {\n\t\t\t\treturn o2Opposite.rankNumber - o1Opposite.rankNumber;\n\t\t\t}\n\t\t\treturn o1Opposite.line - o2Opposite.line;\n\t\t});\n\t\tthis.outgoings.sort((o1, o2) => {\n\t\t\tvar o1Opposite = o1.getOpposite(this.node);\n\t\t\tvar o2Opposite = o2.getOpposite(this.node);\n\t\t\tif (this.side == Side.RIGHT) {\n\t\t\t\treturn o1Opposite.rankNumber - o2Opposite.rankNumber;\n\t\t\t}\n\t\t\treturn o2Opposite.line - o1Opposite.line;\n\t\t});\n\t\tconst edges = this.incomings.concat(this.outgoings);\n\t\tlet size = this.getSize();\n\t\tlet pos = edges.indexOf(edge) + 1;\n\t\tlet total = edges.length + 1;\n\t\tif (this.straightEdge != null) {\n\t\t\tsize -= size / 2;\n\t\t\tvar straightPos = edges.indexOf(this.straightEdge);\n\t\t\tif (straightPos > pos) {\n\t\t\t\ttotal = straightPos;\n\t\t\t} else {\n\t\t\t\tpos -= straightPos;\n\t\t\t\ttotal -= straightPos;\n\t\t\t}\n\t\t}\n\t\tconst offset = Math.floor((size * pos) / total - size / 2);\n\t\tif (this.side == Side.LEFT || this.side == Side.RIGHT) {\n\t\t\treturn new Point(point.x, point.y + offset);\n\t\t}\n\t\treturn new Point(point.x + offset, point.y);\n\t};\n\n\tprivate getSize(): number {\n\t\treturn this.side == Side.LEFT || this.side == Side.RIGHT ?\n\t\t\tthis.node.bounds.height\n\t\t\t: this.node.bounds.width;\n\t};\n}\n\nclass GraphicalNode<T extends GraphNode> {\n\n\tpublic node: T;\n\tprivate weight: number;\n\tpublic isDummy: boolean;\n\tpublic line: number;\n\tpublic rankNumber: number;\n\tprivate adjusters: Array<EdgePositionAdjuster<T>>;\n\tpublic rank: Rank<T>;\n\tpublic bounds: Rectangle;\n\n\tconstructor(node: T, weight?: number) {\n\t\tif (node) {\n\t\t\tthis.node = node;\n\t\t\tthis.weight = 0; // node.getWeight();\n\t\t\tthis.isDummy = false;\n\t\t} else {\n\t\t\tthis.node = null;\n\t\t\tthis.weight = weight;\n\t\t\tthis.isDummy = true;\n\t\t}\n\t\tthis.rankNumber = -1;\n\t\tthis.adjusters = [\n\t\t\tnew EdgePositionAdjuster(Side.TOP, this),\n\t\t\tnew EdgePositionAdjuster(Side.BOTTOM, this),\n\t\t\tnew EdgePositionAdjuster(Side.LEFT, this),\n\t\t\tnew EdgePositionAdjuster(Side.RIGHT, this)\n\t\t];\n\t}\n\n\thasLine(): boolean {\n\t\treturn this.line >= 0;\n\t}\n\n\tgetWeight(): number {\n\t\treturn this.weight;\n\t}\n\n\tcomputeSideInfo(graph: Graph<GraphicalNode<T>, EdgePart<T>>) {\n\t\tfor (let adjuster of this.adjusters) {\n\t\t\tadjuster.reset();\n\t\t}\n\t\tgraph.getOutgoings(this).forEach(edge => {\n\t\t\tthis.adjusters[edge.getFromSide()].add(edge);\n\t\t});\n\t\tgraph.getIncomings(this).forEach(edge => {\n\t\t\tthis.adjusters[edge.getToSide()].add(edge);\n\t\t});\n\t}\n\n\tgetAdjustedPoint(edge) {\n\t\treturn this.adjusters[edge.getFromNode() == this ?\n\t\t\tedge.getFromSide() : edge.getToSide()].adjust(edge);\n\t}\n\n\tgetPoint(side: Side): Point {\n\t\tif (this.isDummy) {\n\t\t\treturn new Point(this.bounds.getCenterX(), this.bounds.getCenterY());\n\t\t}\n\t\tif (side == Side.LEFT) {\n\t\t\treturn new Point(this.bounds.x, this.bounds.getCenterY());\n\t\t}\n\t\tif (side == Side.RIGHT) {\n\t\t\treturn new Point(this.bounds.getMaxX(), this.bounds.getCenterY());\n\t\t}\n\t\tif (side == Side.TOP) {\n\t\t\treturn new Point(this.bounds.getCenterX(), this.bounds.y);\n\t\t}\n\t\tif (side == Side.BOTTOM) {\n\t\t\treturn new Point(this.bounds.getCenterX(), this.bounds.getMaxY());\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tsetBounds(bounds: Rectangle) {\n\t\tthis.bounds = bounds;\n\t\tif (this.node != null) {\n\t\t\tthis.node.bounds = bounds;\n\t\t}\n\t}\n}\n\nclass EdgePart<T extends GraphNode> extends Edge<GraphicalNode<T>> {\n\tconstructor(fromNode: GraphicalNode<T>, toNode: GraphicalNode<T>, public originalEdge: Edge<T>) {\n\t\tsuper(fromNode, toNode);\n\t}\n\n\tgetFromLine() {\n\t\treturn this.getFromNode().line;\n\t};\n\n\tgetToLine() {\n\t\treturn this.getToNode().line;\n\t};\n\n\tgetFromSide() {\n\t\tif (this.getFromNode().line < this.getToNode().line) {\n\t\t\treturn Side.BOTTOM;\n\t\t}\n\t\treturn Side.RIGHT;\n\t};\n\n\tgetToSide() {\n\t\tif (this.getFromNode().line > this.getToNode().line) {\n\t\t\treturn Side.BOTTOM;\n\t\t}\n\t\treturn Side.LEFT;\n\t}\n}\n\nclass GraphicalEdge<T extends GraphNode> implements GraphEdge {\n\n\tprivate originalEdge: Edge<T>;\n\tprivate firstEdge: EdgePart<T>;\n\tprivate secondEdge: EdgePart<T>;\n\n\tconstructor(edge: EdgePart<T>) {\n\t\tthis.originalEdge = edge.originalEdge;\n\t\tthis.firstEdge = edge;\n\t}\n\n\tgetOriginalEdge<R>(): Edge<R> {\n\t\treturn <Edge<R>><any>this.originalEdge;\n\t}\n\n\tupdate(fromEdge: EdgePart<T>, toEdge: EdgePart<T>) {\n\t\tthis.firstEdge = fromEdge;\n\t\tthis.secondEdge = toEdge;\n\t}\n\n\tgetPoints(): Array<Point> {\n\t\tconst points = [];\n\n\t\tlet fromNode = this.firstEdge.getFromNode();\n\t\tlet fromPoint = fromNode.getAdjustedPoint(this.firstEdge);\n\t\tpoints.push(fromPoint);\n\n\t\tlet toNode = this.firstEdge.getToNode();\n\t\tlet toPoint = toNode.getAdjustedPoint(this.firstEdge);\n\t\tthis.addCornerPoint(fromNode, toNode, fromPoint, toPoint, points);\n\n\t\tif (this.secondEdge != null) {\n\t\t\tfromNode = toNode;\n\t\t\tfromPoint = toPoint;\n\t\t\ttoNode = this.secondEdge.getToNode();\n\t\t\ttoPoint = toNode.getAdjustedPoint(this.secondEdge);\n\t\t\tthis.addCornerPoint(fromNode, toNode, fromPoint, toPoint, points);\n\t\t}\n\t\tpoints.push(toPoint);\n\t\treturn points;\n\t}\n\n\tprivate addCornerPoint (fromNode: GraphicalNode<T>, toNode: GraphicalNode<T>, fromPoint: Point, toPoint: Point, points: Array<Point>) {\n\t\tif (fromNode.line < toNode.line) {\n\t\t\t// go down first then right\n\t\t\tpoints.push(new Point(fromPoint.x, toPoint.y));\n\t\t} else if (fromNode.line > toNode.line) {\n\t\t\t// go right then go up\n\t\t\tpoints.push(new Point(toPoint.x, fromPoint.y));\n\t\t}\n\t}\n\n\tcontains(point: Point): boolean {\n\t\tlet previous: Point = null;\n\t\tfor (let p of this.getPoints()) {\n\t\t\tif (previous != null) {\n\t\t\t\tif (previous.cornerTo(p).expand(5).contains(point)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevious = p;\n\t\t}\n\t\treturn false;\n\t}\n\n\treverse(): EdgePart<T> {\n\t\tthrow new Error();\n\t}\n\n}\n\nclass Rank<T extends GraphNode> {\n\tpublic nodes: Array<GraphicalNode<T>> = [];\n\tpublic width: number;\n\n\tconstructor(private index: number) { }\n\n\taddNode(node: GraphicalNode<T>) {\n\t\tthis.nodes.push(node);\n\t\tnode.rank = this;\n\t};\n\n\tcomputeSize(sizeProvider : SizeProvider<T>) {\n\t\tthis.width = 0;\n\t\tthis.nodes.forEach(node => {\n\t\t\tif (node.node != null) {\n\t\t\t\tthis.width = Math.max(this.width, sizeProvider.getWidth(node.node));\n\t\t\t}\n\t\t});\n\t};\n\n\tgetNodeAt(line: number): GraphicalNode<T> {\n\t\tfor (var i = 0; i < this.nodes.length; ++i) {\n\t\t\tif (this.nodes[i].line == line) {\n\t\t\t\treturn this.nodes[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nconst WEIGHT_COMPARATOR = (o1, o2) => {\n\treturn o1.getWeight() - o2.getWeight();\n};\n\nconst LINE_COMPARATOR = (o1, o2) => {\n\treturn o1.line - o2.line;\n};\n\nexport class GraphLayout<T extends GraphNode> {\n\n\tprivate workGraph: Graph<GraphicalNode<T>, EdgePart<T>>;\n\tprivate edgeMap: GMap<EdgePart<T>, GraphicalEdge<T>> = new GMap();\n\tprivate maxWidth: number;\n\tprivate maxHeight: number;\n\tprivate ranks: Array<Rank<T>>;\n\n\tconstructor(private graph: Graph<T, Edge<T>>) { }\n\n\tlayout () {\n\t\tthis.createWorkGraph(this.graph);\n\t\tthis.makeAcyclic();\n\t\tthis.rankNodes();\n\t\tthis.makeLines();\n\t\t//this.correctEdgeOverlap();\n\t\tthis.computeSideInfo();\n\t}\n\n\tprivate createWorkGraph (graph: Graph<T, Edge<T>>) {\n\t\tthis.workGraph = new Graph();\n\t\tconst nodeMap: GMap<T, GraphicalNode<T>> = new GMap();\n\t\tgraph.getNodes().forEach(node => {\n\t\t\tconst graphicalNode = new GraphicalNode(node);\n\t\t\tnodeMap.put(node, graphicalNode);\n\t\t\tthis.workGraph.addNode(graphicalNode);\n\t\t});\n\t\tthis.edgeMap.clear();\n\t\tgraph.getEdges().forEach(e => {\n\t\t\tconst edge = new EdgePart(nodeMap.get(e.getFromNode()), nodeMap.get(e.getToNode()), e);\n\t\t\tthis.workGraph.addEdge(edge);\n\t\t\tthis.edgeMap.put(edge, new GraphicalEdge(edge));\n\t\t});\n\t}\n\n\tprivate makeAcyclic () {\n\t\tconst g = new Graph(this.workGraph);\n\t\tconst edges: Array<EdgePart<T>> = [];\n\t\twhile (g.getNodes().length > 0) {\n\t\t\tlet v = null;\n\t\t\twhile ((v = g.getSink()) != null) {\n\t\t\t\tedges.push(...g.getIncomings(v));\n\t\t\t\tg.removeNode(v);\n\t\t\t}\n\t\t\twhile ((v = g.getIsolated()) != null) {\n\t\t\t\tg.removeNode(v);\n\t\t\t}\n\t\t\twhile ((v = g.getSource()) != null) {\n\t\t\t\tedges.push(...g.getOutgoings(v));\n\t\t\t\tg.removeNode(v);\n\t\t\t}\n\t\t\tif (g.getNodes().length != 0) {\n\t\t\t\tvar maxNodes = [];\n\t\t\t\tvar maxValue = 0;\n\t\t\t\tg.getNodes().forEach(n => {\n\t\t\t\t\tvar value = Math.max(g.getOutgoings(n).length, g.getIncomings(n).length);\n\t\t\t\t\tif (maxNodes.length == 0 || maxValue <= value) {\n\t\t\t\t\t\tif (maxValue < value) {\n\t\t\t\t\t\t\tmaxNodes = [];\n\t\t\t\t\t\t\tmaxValue = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmaxNodes.push(n);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// use weight to make algorithm deterministic\n\t\t\t\tmaxNodes.sort(WEIGHT_COMPARATOR);\n\t\t\t\tvar maxNode = maxNodes[0];\n\t\t\t\tedges.push(...g.getOutgoings(maxNode));\n\t\t\t\tg.removeNode(maxNode);\n\t\t\t}\n\t\t}\n\t\tthis.workGraph.getEdges().slice().forEach(edge => {\n\t\t\tif (edges.indexOf(edge) < 0) {\n\t\t\t\tconst gEdge = this.edgeMap.remove(edge);\n\t\t\t\tconst newEdge = gEdge.reverse();\n\t\t\t\tthis.edgeMap.put(newEdge, gEdge);\n\t\t\t\t// this.workGraph.replaceEdgeBy(edge, newEdge);\n\t\t\t\tthrow new Error();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate rankNodes () {\n\t\tlet maxRank = 0;\n\t\tconst work = this.workGraph.getNodes().slice();\n\t\tthis.ranks = [];\n\t\twhile (work.length > 0) {\n\t\t\tconst node = work.shift();\n\t\t\tlet rank = 0;\n\t\t\tthis.workGraph.getIncomings(node).forEach(edge => {\n\t\t\t\tconst fromNode = edge.getFromNode();\n\t\t\t\tif (fromNode.rankNumber < 0) {\n\t\t\t\t\trank = -1;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\trank = Math.max(rank, fromNode.rankNumber + 1);\n\t\t\t});\n\t\t\tif (rank < 0) {\n\t\t\t\twork.push(node);\n\t\t\t} else {\n\t\t\t\tnode.rankNumber = rank;\n\t\t\t\tmaxRank = Math.max(maxRank, rank);\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i <= maxRank; ++i) {\n\t\t\tthis.ranks.push(new Rank(i));\n\t\t}\n\t\tthis.workGraph.getNodes().forEach(node => {\n\t\t\tthis.ranks[node.rankNumber].addNode(node);\n\t\t});\n\t}\n\n\tprivate makeLines () {\n\t\tthis.workGraph.getNodes().forEach(node => {\n\t\t\tnode.line = -1;\n\t\t});\n\t\tvar line = 0;\n\t\tthis.ranks[0].nodes.sort(WEIGHT_COMPARATOR);\n\t\tthis.ranks[0].nodes.forEach(node => {\n\t\t\tline = this.assignNodeLine(node, line) + 1;\n\t\t});\n\t\tfor (var i = 1; i < this.ranks.length; ++i) {\n\t\t\tthis.ranks[i].nodes.sort(LINE_COMPARATOR);\n\t\t}\n\t};\n\n\tprivate assignNodeLine (node: GraphicalNode<T>, line: number): number {\n\t\tnode.line = line;\n\t\tthis.workGraph.getOutgoings(node).slice().forEach(edge => {\n\t\t\tvar toNode = edge.getToNode();\n\t\t\tif (!toNode.hasLine()) {\n\t\t\t\tif (this.hasOtherNodeOnLine(edge, line, false)) {\n\t\t\t\t\t++line;\n\t\t\t\t}\n\t\t\t\tline = this.assignNodeLine(edge.getToNode(), line);\n\t\t\t} else {\n\t\t\t\tif (this.hasOtherNodeOnLine(edge, edge.getFromLine(), true)) {\n\t\t\t\t\t++line;\n\t\t\t\t\tthis.insertDummyNode(edge, line);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn line;\n\t};\n\n\tprivate hasOtherNodeOnLine (edge: EdgePart<T>, line: number, testSameLine: boolean): boolean {\n\t\treturn this.workGraph.getOutgoings(edge.getFromNode()).find(e => {\n\t\t\treturn e != edge && e.getToNode().hasLine() && e.getFromSide() == Side.RIGHT\n\t\t\t\t&& (!testSameLine || e.getToLine() == line);\n\t\t}) != undefined;\n\t};\n\n\tprivate insertDummyNode (edge: EdgePart<T>, line: number) {\n\t\tconst newRankNumber = edge.getFromNode().rankNumber + 1;\n\t\tconst newNode = new GraphicalNode(<T>null, this.workGraph.getNodes().length);\n\t\tnewNode.line = line;\n\t\tnewNode.rankNumber = newRankNumber;\n\t\tthis.workGraph.addNode(newNode);\n\t\tthis.ranks[newRankNumber].addNode(newNode);\n\n\t\tconst fromEdge = new EdgePart(edge.getFromNode(), newNode, edge.originalEdge);\n\t\tconst toEdge = new EdgePart(newNode, edge.getToNode(), edge.originalEdge);\n\t\tthis.workGraph.replaceEdgeBy(edge, fromEdge, toEdge);\n\n\t\tconst graphicalEdge = this.edgeMap.remove(edge);\n\t\tgraphicalEdge.update(fromEdge, toEdge);\n\t\tthis.edgeMap.put(fromEdge, graphicalEdge);\n\t\tthis.edgeMap.put(toEdge, graphicalEdge);\n\t};\n\n\tcomputeSideInfo () {\n\t\tthis.workGraph.getNodes().forEach(node => {\n\t\t\tnode.computeSideInfo(this.workGraph);\n\t\t});\n\t};\n\n\tsetSizes (sizeProvider: SizeProvider<T>) {\n\t\tlet maxLine = 0;\n\t\tthis.ranks.forEach(rank => {\n\t\t\trank.computeSize(sizeProvider);\n\t\t\trank.nodes.forEach(node => {\n\t\t\t\tmaxLine = Math.max(maxLine, node.line);\n\t\t\t});\n\t\t});\n\t\tconst heights = [];\n\t\tfor (let line = 0; line <= maxLine; ++line) {\n\t\t\tlet height = 0;\n\t\t\tthis.ranks.forEach(rank => {\n\t\t\t\tvar node = rank.getNodeAt(line);\n\t\t\t\tif (node != null && node.node != null) {\n\t\t\t\t\theight = Math.max(height, sizeProvider.getHeight(node.node));\n\t\t\t\t}\n\t\t\t});\n\t\t\theights.push(height);\n\t\t}\n\t\tlet y = sizeProvider.getVerticalMargin();\n\t\tthis.maxWidth = 0;\n\t\tthis.maxHeight = 0;\n\t\tfor (let line = 0; line < heights.length; ++line) {\n\t\t\tlet x = sizeProvider.getHorizontalMargin();\n\t\t\tthis.ranks.forEach(rank => {\n\t\t\t\tconst node = rank.getNodeAt(line);\n\t\t\t\tif (node != null) {\n\t\t\t\t\tnode.setBounds(new Rectangle(x, y, rank.width, heights[line]));\n\t\t\t\t}\n\t\t\t\tx += rank.width + sizeProvider.getHorizontalMargin();\n\t\t\t});\n\t\t\tthis.maxWidth = Math.max(this.maxWidth, x);\n\t\t\ty += heights[line] + sizeProvider.getVerticalMargin();\n\t\t}\n\t\tthis.maxHeight = y;\n\t}\n\n\tgetEdges (): Array<GraphEdge> {\n\t\treturn this.edgeMap.values();\n\t}\n\n\tgetWidth (): number {\n\t\treturn this.maxWidth;\n\t}\n\n\tgetHeight (): number {\n\t\treturn this.maxHeight;\n\t}\n\n}","module.exports = \"\\n#inlineEditWrapper {\\n    display: inline-block;\\n}\\n  \\ndiv.inline-edit {\\n    padding: 2px;\\n    text-decoration: none;\\n    border: 1px solid transparent;\\n    text-align: left;\\n    width: auto;\\n}\\n  \\ndiv.inline-edit:hover {\\n    border: 1px solid #A8B9CE;\\n    cursor: pointer;\\n}\\n  \\ninput {\\n    display: inline-block;\\n    border: 1px solid #A8B9CE;\\n    outline: 0px;\\n    padding: 2px;\\n}\"","module.exports = \"<div id=\\\"inlineEditWrapper\\\">\\n    <div *ngIf=\\\"editing\\\">\\n      <input #inlineEditControl (blur)=\\\"onBlur($event)\\\" (keydown.enter)=\\\"onKeyDownEnter($event)\\\" [(ngModel)]=\\\"value\\\" type=\\\"text\\\" />\\n    </div>\\n    <div *ngIf=\\\"!editing\\\">\\n      <div title=\\\"Click to edit\\\" (click)=\\\"edit(value)\\\" (focus)=\\\"edit(value);\\\" tabindex=\\\"0\\\" class=\\\"inline-edit\\\">{{value}}&nbsp;</div>\\n    </div>\\n</div>\"","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// https://github.com/gottsohn/inline-edit-tutorial/blob/master/src/app/components/custom/inline-edit/inline-edit.component.ts\n// https://medium.com/@majdasab/implementing-control-value-accessor-in-angular-1b89f2f84ebf\n\n@Component({\n  selector: 'app-inline-edit',\n  templateUrl: './inline-edit.component.html',\n  styleUrls: ['./inline-edit.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InlineEditComponent),\n      multi: true\n    }\n  ]\n})\nexport class InlineEditComponent implements OnInit, ControlValueAccessor {\n\n  @ViewChild('inlineEditControl') inlineEditControl: ElementRef;\n\n  private _value: string = '';\n  private preValue: string = '';\n  private onChange: any = () => {};\n\n  public editing: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get value() { return this._value; }\n\n  set value(v) {\n    if (v !== undefined && v !== this._value) {\n      this._value = v;\n    }\n  }\n\n  public writeValue(value: any) {\n    this._value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => {}): void {\n  }\n\n  public onBlur($event: Event) {\n    this.editing = false;\n    this.onChange(this._value);\n  }\n\n  public onKeyDownEnter($event: Event) {\n    this.editing = false;\n  }\n\n  public edit(value: string) {\n    this.preValue = value;\n    this.editing = true;\n    setTimeout(() => this.inlineEditControl.nativeElement.focus());\n  }\n\n  public cancel() {\n    this.value = this.preValue;\n    this.editing = false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">GraphIt</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item dropdown\\\" ngbDropdown>\\n        <a class=\\\"nav-link dropdown-toggle\\\" ngbDropdownToggle>File</a>\\n        <ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuFile\\\" ngbDropdownMenu>\\n          <li class=\\\"dropdown-item\\\"><a target=\\\"_blank\\\" href=\\\"#/edit\\\">New</a></li>\\n          <li class=\\\"dropdown-item\\\"><a (click)=\\\"open()\\\">Open</a></li>\\n          <li class=\\\"dropdown-item\\\"><a (click)=\\\"save()\\\">Save</a></li>\\n        </ul>\\n      </li>\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" (click)=\\\"about()\\\">About</a></li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"button\\\" (click)=\\\"signIn()\\\">Sign-In</button>\\n    </form>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AboutModalComponent } from '../about-modal/about-modal.component';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private modalService: NgbModal) {}\n\n  ngOnInit() {\n  }\n\n  open() {\n    console.log(\"Open\");\n  }\n\n  save() {\n    console.log(\"Save\");\n  }\n\n  about() {\n    this.modalService.open(AboutModalComponent);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { EditorState } from './editor/editor.component';\n\n@Pipe({\n  name: 'saveStateFormatter'\n})\nexport class SaveStateFormatterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value == EditorState.DIRTY) {\n      return 'You have unsaved changes';\n    } else if (value == EditorState.SAVE) {\n      return 'Saving...';\n    } else if (value == EditorState.LOAD) {\n      return 'Loading...';\n    } else if (value == EditorState.READONLY) {\n      return \"Read only\";\n    } else {\n      return 'All changes saved';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n\n  constructor(private http: Http) { }\n\n  /*\n  var jsonTransform = function (data, headers) {\n\t\treturn angular.fromJson(data);\n\t};\n\tvar service = {\n\t\tuser: function () {\n\t\t\treturn $http.get('user', {transformResponse:jsonTransform});\n\t\t},\n\t\tabout: function () {\n\t\t\treturn $http.get('about', {transformResponse:jsonTransform});\n\t\t},\n\t\tsave: function(fileInfo, newRevision) {\n\t\t\t$log.info('Saving', fileInfo);\n\t\t\treturn $http({\n\t\t\t\turl: 'svc',\n\t\t\t\tmethod:fileInfo.resource_id ? 'PUT' : 'POST',\n\t\t\t\theaders:{\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tparams:{\n\t\t\t\t\t'newRevision': newRevision\n\t\t\t\t},\n\t\t\t\ttransformResponse: jsonTransform,\n\t\t\t\tdata: JSON.stringify(fileInfo)\n            });\n\t\t},\n\t\tload: function (id) {\n\t\t\treturn $http.get('svc', {\n\t\t\t\ttransformResponse:jsonTransform,\n\t\t\t\tparams:{\n\t\t\t\t\t'file_id':id\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n  */\n}\n","\n\nexport class GMap<K, V> {\n\n\tprivate _keys: Array<K>;\n\tprivate _values: Array<V>;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tput(key : K, value: V) {\n\t\tvar index = this._keys.indexOf(key);\n\t\tif (index >= 0) {\n\t\t\tthis._values[index] = value;\n\t\t} else {\n\t\t\tthis._keys.push(key);\n\t\t\tthis._values.push(value);\n\t\t}\n\t}\n\n\tkeys(): Array<K> {\n\t\treturn this._keys;\n\t}\n\n\tvalues(): Array<V> {\n\t\treturn this._values;\n\t}\n\n\tget(key: K): V {\n\t\tvar i = this._keys.indexOf(key);\n\t\tif (i < 0) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._values[i];\n\t}\n\n\tremove(key: K): V {\n\t\tvar i = this._keys.indexOf(key);\n\t\tif (i < 0) {\n\t\t\treturn null;\n\t\t}\n\t\tvar value = this._values[i];\n\t\tthis._keys.splice(i, 1);\n\t\tthis._values.splice(i, 1);\n\t\treturn value;\n\t}\n\n\tclear() {\n\t\tthis._keys = [];\n\t\tthis._values = [];\n\t}\n\n}\n\nexport function remove<T>(list: Array<T>, value: T) {\n\tlist.splice(list.indexOf(value), 1);\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}